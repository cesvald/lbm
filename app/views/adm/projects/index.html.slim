#page_content
  .container
    .title
      h1= t('.title')
      h2
        strong= "#{@total_projects} "
        = t('.total_projects')

    .filters
      .bootstrap-form
        = form_tag adm_projects_path, method: :get, class: 'form-horizontal' do |f|
          fieldset
            .input
              = label_tag :by_id, t('.id')
              = text_field_tag :by_id, params[:by_id], class: 'lbm-input'

            .input
              = label_tag :between_created_at_start_at, t('.between_created_at')
              = text_field_tag 'between_created_at[start_at]', (params[:between_created_at][:start_at] if params[:between_created_at].present?), class: 'lbm-input'
              | &nbsp;
              | &nbsp;
              = text_field_tag 'between_created_at[ends_at]', (params[:between_created_at][:ends_at] if params[:between_created_at].present?), class: 'lbm-input'

            .input
              = label_tag :by_state, t('.by_state')
              = select_tag :by_state, options_for_select(Project.state_names, params[:by_state]), include_blank: true, class: "lbm-select"

            .input
              = label_tag :pg_search, t('.project')
              = text_field_tag :pg_search, params[:pg_search], class: 'lbm-input'
            .input
              = label_tag :user_name_contains, t('.user')
              = text_field_tag :user_name_contains, params[:user_name_contains], class: 'lbm-input'
            .input
              = label_tag :by_user_email, t('.activerecord.attributes.user.email')
              = text_field_tag :by_user_email, params[:by_user_email], class: 'lbm-input'
            .input
              = label_tag :by_channel, t('.by_channel')
              = select_tag :by_channel, options_from_collection_for_select(Channel.all, 'id', 'name', params[:by_channel]), include_blank: true, class: "lbm-select"

            .input
              = label_tag :order_table, t('.order_table')
              = select_tag :order_table, options_for_select({t('.order_created_at') => 'created_at', t('.order_asc') => 'asc',t('.order_desc') => 'desc'}, params[:order_table]), include_blank: false, class: "lbm-select"
          fieldset
            .input.total_results
              #total_results
                = pluralize_without_number @projects.count, t('found_singular'), t('found_plural')
                strong= @projects.count
                = pluralize_without_number(@projects.count, t('project_singular'), t('project_plural')).downcase
            .bootstrap-twitter
              .input.submit
                = submit_tag t('.submit'), class: 'lbm-button'
      .clearfix
      br
      .bootstrap-twitter.input
        .submit
          = link_to "Download Excel", adm_projects_path({format: "xlsx"}.merge(params)), class: 'lbm-button'
      br
    .data-table
      = paginate @projects
      - if @projects.empty?
        = t('.no_backers')
      - else
        .bootstrap-twitter
          table.table.table-striped
            thead
              tr
                th style="width: 200px;"
                  = t('.name')
                th= t('.category')
                th= t('.user_id')
                th= t('.activerecord.attributes.user.email')
                th= t('.activerecord.attributes.user.full_name')
                th= t('.goal')
                th= t('.pledged')
                th= t('.total_backs')
                th= t('.recommended')
                th= t('.online_date')
                th= t('.expires_at')
                th= t('.state')
                th
            tbody
              - @projects.includes(:category).each do |project|
                tr id=project.id class=cycle("even", "odd")
                  td= link_to project.name, project_by_slug_path(permalink: project.permalink)
                  td= project.category
                  td= best_in_place [:adm, project], :user_id, method: :put, type: :input
                  td= project.user.email
                  td= project.user.full_name
                  td= best_in_place [:adm, project], :goal, method: :put, type: :input, display_as: :display_goal
                  td= "#{project.display_pledged} (#{project.progress}%)"
                  td= project.total_backers
                  td.checkbox= best_in_place [:adm, project], :recommended, method: :put, type: :checkbox, collection: [t('no'), t('yes')]
                  td= project.online_date.strftime('%d/%m/%Y') if project.online_date
                  td= project.display_expires_at
                  td
                    span= project.state
                  td
                    .btn-group
                      = link_to 'javascript:void(0);', class: 'btn btn-mini dropdown-toggle', data: {toggle: "dropdown"} do
                        b.caret
                      ul.dropdown-menu
                        - if project.can_push_to_trash?
                          li
                            = link_to adm_project_path(project), method: :delete, data: {confirm: t('adm.confirm_dialog')} do
                              i.icon-trash
                              = t('.send_to_trash')
                        - if project.can_approve?
                          li
                            = link_to approve_adm_project_path(project), method: :put do
                              i.icon-ok
                              = t('.approve')
                        - if project.can_review?
                          li
                            = link_to show_review_adm_project_path(project), method: :get do
                              i.icon-ok
                              = t('.review')
                        - if project.can_reject?
                          li
                            = link_to reject_adm_project_path(project), method: :put  do
                              i.icon-ban-circle
                              = t('.reject')
                        - if project.can_push_to_draft?
                          li
                            = link_to  push_to_draft_adm_project_path(project), method: :put  do
                              i.icon-trash
                              = t('.send_to_draft')
                        - if project.successful? || project.online? || project.partial_successful?
                          li
                            = link_to documents_project_path(project), target: :_blank do
                                i.icon-ok
                                = t("projects.show.download_all_documents")
                        - if project.online? && (project.reached_goal? || project.reached_partial_goal?)
                          li
                            = link_to finish_adm_project_path(project), method: :put  do
                                i.icon-ok
                                = t('.finish_project')
                        - Channel.all.each do |channel|
                          li
                            - if channel.projects.include?(project)
                              = link_to adm_channel_project_path(channel, project), method: :delete, data: {confirm: t('adm.confirm_dialog')} do
                                i.icon-trash
                                = "#{t('.remove_from_channel')} #{channel.name}"
                            - else
                              = link_to adm_channel_projects_path(channel, project_id: project), method: :post, data: {confirm: t('adm.confirm_dialog')} do
                                i.icon-ok
                                = "#{t('.add_to_channel')} #{channel.name}"

      = paginate @projects
  .clearfix


