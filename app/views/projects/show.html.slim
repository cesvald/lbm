- content_for :js_templates do
  = render partial: 'backer'
  = render partial: 'project_templates'
  - if can?(:update, @project)
    = render partial: 'sort_rewards'

= content_for :meta_tags do
  - if @update
    meta name="description" content=@update.title
    meta property="og:title" content=@update.title
    meta property="og:description" content=@update.comment
    meta property="og:url" content=project_by_slug_url(@project.permalink, update_id: @update.id, locale: I18n.locale)
  - else
    meta name="description" content=@project.headline
    meta property="og:title" content=@project.name
    meta property="og:description" content=@project.headline
    meta property="og:url" content=project_by_slug_url(@project.permalink, locale: I18n.locale)
  meta property="og:type" content='cause'
  meta property="og:image" content=@project.display_image('project_thumb_facebook')
  meta property="og:site_name" content=::Configuration[:company_name]
  meta property="fb:admins" content="#{fb_admins}"

= content_for :dialogs do

  #new-reward-form.dialog-content
    .bootstrap-twitter#close-dialog-wrapper
      span#close-anonymous-warning.badge.close-dialog
        | X
    = render partial: 'projects/backers/form', locals: {reward: Reward.new, update: false}
  - if not @reward.nil?
    #update-reward-form.dialog-content
      .bootstrap-twitter#close-dialog-wrapper
        span#close-anonymous-warning.badge.close-dialog
          | X
      = render partial: 'projects/backers/form', locals: {reward: @reward, update: true}
#page_content
  .container
    - if !@channel.nil? && @channel.banner_top_url.present?
      .banner
        = image_tag @channel.banner_top_url
    /*
      - if @project.draft? || @project.reviewed?
        = render "draft_warning"

      - if @project.rejected?
        = render "rejected_warning"

      - if @project.online? && can?(:update, @project)
        = render "online_warning"

      - if @project.waiting_funds? && can?(:update, @project)
        = render "waiting_funds_warning"
      
      - if @project.partial_successful? && can?(:update, @project)
        = render "partial_successful_warning"
        
      - if @project.successful? && can?(:update, @project)
        = render "successful_warning"

      - if @project.failed? && can?(:update, @project)
        = render "failed_warning"
    
    #project_description[data-project=@project.to_json]
    /.project_image
    /  = image_tag @project.display_image('project_thumb_small')
    .section_header
      h1= @project.name
      h4
        = t('projects.project_header.without_city', category_name: link_to(@project.category, explore_path(anchor: @project.category.to_s.parameterize)), author: link_to(@project.user.display_name, user_path(@project.user))).html_safe
        - @project.channels.each do |channel|
          = link_to(channel.name, root_url(subdomain: channel.permalink), class: 'project_channel')
    .tab_container
      nav#project_menu
        = link_to '#about', id: 'about_link', class: 'selected' do
          = t('.menu.about')
        = link_to '#pictures', id: 'pictures_link' do
            = t('.menu.pictures')
        = link_to '#updates', id: 'updates_link' do
          = t('.menu.updates')
          span.count=" (#{@updates.count})"
        = link_to '#backers', id: 'backers_link' do
          = t('.menu.backers')
          span.count=" (#{@project.total_backers})"
        = link_to '#comments', id: 'comments_link' do
          = t('.menu.comments')
          | &nbsp; (
          fb:comments-count href="#{request.url}"
          | )
        - if can? :update, @project
          = link_to '#edit', id: 'edit_link' do
            = t('.menu.edit')
          = link_to '#reports', id: 'reports_link' do
            = t('.menu.reports')
        - if can? :update, @project, :identification_file
          = link_to '#documents', id: 'documents_link' do
            = t('.menu.documents')
    .main
      .sidebar
        .info
          - unless @channel && @channel.show_drafts? && (@project.draft? || @project.reviewed?)
            #statistics
              .statistics
                .static-row
                  .statistic-wrapper.goal
                    em.subdescription
                      = "#{@project.display_pledged} #{t('statistics.goal.subtitle', total: @project.display_goal).html_safe}"
                .statistic-wrapper
                  = embedded_svg "lbm/time-clock-icon.svg", class: "time-clock-icon"
                  - if @project.draft? || @project.rejected? || @project.reviewed?
                    p.time-remaining= @project.online_days
                    em.description #{@project.online_days} #{pluralize_without_number(@project.online_days, I18n.t('datetime.prompts.day').downcase)} #{pluralize_without_number(@project.online_days, t('remaining_singular'), t('remaining_plural'))}
                  - else
                    p.time-remaining= @project.remaining_days
                    em.description #{@project.time_to_go[:unit].capitalize} #{pluralize_without_number(@project.time_to_go[:time], t('remaining_singular'), t('remaining_plural'))}
                - if @project.online? && @project.in_time?
                  #pledge
                    = form_tag(new_project_backer_path(@project), method: :get, id: 'back_project_form') do
                      fieldset
                        = button_tag do
                          = embedded_svg "lbm/money-icon.svg", class: "money-icon"
                          p
                            = t('projects.back_project.submit')
                - if @project.finished?
                  #condition[class="#{@project.display_status}"]
                    p
                      = t("projects.back_project.display_status.#{@project.display_status}", goal: @project.display_goal, date: @project.display_expires_at)
      #project_content
        - if can? :update, @project
          #project_reports.content= render 'project_reports'
          #project_edit.content= render 'project_edit'
          #project_pictures.content= render 'project_pictures'
          #project_documents.content= render 'project_documents'
        #project_updates.content= render 'project_updates'
        .media_content_backers
          #project_backers.content
        #project_comments.content= render 'comments'
        #project_about.content= render 'project_about'

        .clearfix
        #loading= image_tag "loading.gif"
      .clearfix

    .clearfix
= render 'show_embed'
