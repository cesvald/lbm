div[id="reward_#{reward.id}"  class="box reward #{(reward.sold_out?  ? 'disabled'  : 'available' )} #{(reward.minimum_value == 0 ? 'selected' : '')}" data-id="#{(reward.id) ? reward.id : 0}" data-min-value="#{reward.minimum_value.to_i}"]
  - if reward.minimum_value == 0
    h2= t('reward.dont_want')
  - else
    h2= t('projects.rewards.reward_title', minimum: reward.display_minimum).html_safe
    em= pluralize(reward.backers.confirmed.count, t('backer_singular'), t('backer_plural'))
  .description-wrapper
    = reward.display_description
    - if reward.maximum_backers
      .maximum_backers.clearfix
        - if reward.sold_out?
          = t('reward.sold_out')
        - else
          = "#{t('reward.limited')}: #{reward.display_remaining}"
      - in_time_to_confirm = reward.backers.in_time_to_confirm.count
      - if in_time_to_confirm > 0
        .maximum_backers.in_time_to_confirm.clearfix
          = t('projects.rewards.backs_to_confirm', count: in_time_to_confirm)
      .clearfix
    - if reward.days_to_delivery.present?
      div class="reward_deliver_at"
        p= "#{t('projects.rewards.reward_deliver_time', prevision: reward.display_deliver_prevision)}".html_safe
    /*
      - if current_user && current_user.admin
        div class="reward_updated_at"
          p= "#{I18n.t('projects.rewards.updated_at')}: #{I18n.l(reward.updated_at.to_date)} #{@project.online_date.nil? ? '' : ((@project.online_date > reward.updated_at)? '(draft)' : '(online)')}"
        - if reward.has_modification?
          div class="description_version rewardVersioning#{reward.id}"
            p= reward.last_description
          .maximum_backers.in_time_to_confirm.clearfix
            .updated_reward
              span id="rewardVersioning#{reward.id}"
                = t('projects.rewards.versions')